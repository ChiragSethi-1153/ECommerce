asyncapi: 2.6.0

#Info of the application
info:
  title: E-Commerce Auth Microservice
  version: '1.0'
  description:  E-Commerce Auth Microservice

#servers:
#  development:
#    url: localhost:5672
#    protocol: amqp
#    description: Development RabbitMQ
#  beta:
#    url: academic-administration.fbr.group:5672
#    protocol: amqp
#    description: Beta RabbitMQ
#  production:
#    url: academic-administration.fbr.group:5672
#    protocol: amqp
#    description: Production RabbitMQ

channels:
  auth.user_data:
    publish:
      description: publish user details 
      summary: Inform about a new user
      # operationId: SurveyRequestBooked
      message:
        $ref: "#/components/messages/UserRegistered"
  
  auth.edit_password_data:
    publish:
      description: edit user password
      summary: inform about password change
      # operationId: SurveyRequestBooked
      message:
        $ref: "#/components/messages/EditPasswordDetails"

  users.user_data:
    subscribe:
      description: add user details 
      summary: Inform about a user creation
      # operationId: SurveyRequestBooked
      message:
        $ref: "#/components/messages/UserCreated"
  
  users.user_updated: 
    subscribe:
      description: add user details 
      summary: Inform about a user creation
      # operationId: SurveyRequestBooked
      message:
        $ref: "#/components/messages/EditUserDetails"
  
  users.user_deleted:
    subscribe:
      description: delete user details 
      summary: Inform about a user deletion
      # operationId: SurveyRequestBooked
      message:
        $ref: "#/components/messages/DeleteUserDetails"

  users.user_restored:
    subscribe:
      description: Restore user details 
      summary: Inform about a user restore
      # operationId: SurveyRequestBooked
      message:
        $ref: "#/components/messages/RestoreUserDetails"

components:
  messages:
    
    UserRegistered:
      name: New user
      title: New user has registered
      contentType: application/json
      summary: Inform new user registration
      payload:
        type: object
        description: details of the user
        properties:
          uuid:
            type: string
            description: Unique ID for the Object
          fired_at:
            type: string
            format: date-time
            description: Date that the event was fired
          user_details:
            $ref: '#/components/schemas/AuthDetailsPayload'

    EditPasswordDetails:
      name: Edit user details
      title: Edit user details
      payload:
        type: object
        description: details of the user
        properties:
          uuid:
            type: string
            description: Unique ID for the Object
          fired_at:
            type: string
            format: date-time
            description: Date that the event was fired
          user_details:
            $ref: '#/components/schemas/EditPasswordPayload'
    
    UserCreated:
      name: New user
      title: New user has registered
      contentType: application/json
      summary: Inform new user registration
      payload:
        type: object
        description: details of the user
        properties:
          uuid:
            type: string
            description: Unique ID for the Object
          fired_at:
            type: string
            format: date-time
            description: Date that the event was fired
          user_details:
            $ref: '#/components/schemas/UserDetailsPayload'
    

    EditUserDetails:
      name: Edit user details
      title: Edit user details
      payload:
        type: object
        description: details of the user
        properties:
          uuid:
            type: string
            description: Unique ID for the Object
          fired_at:
            type: string
            format: date-time
            description: Date that the event was fired
          user_details:
            $ref: '#/components/schemas/EditUserPayload'
      
    DeleteUserDetails:
      name: Delete user details
      title: Delete user details
      payload:
        type: object
        description: details of the user
        properties:
          uuid:
            type: string
            description: Unique ID for the Object
          fired_at:
            type: string
            format: date-time
            description: Date that the event was fired
          user_details:
            $ref: '#/components/schemas/DeleteUserPayload'
    
    RestoreUserDetails:
      name: Restore user details
      title: Restore user details
      payload:
        type: object
        description: details of the user
        properties:
          uuid:
            type: string
            description: Unique ID for the Object
          fired_at:
            type: string
            format: date-time
            description: Date that the event was fired
          user_details:
            $ref: '#/components/schemas/DeleteUserPayload'



  schemas:   
    AuthDetailsPayload: 
      type: object
      properties:
        uuid:
          type: string
          example: "00a6fa25-df29-4701-9077-557932591766"
        name:
          type: string
          example: "name"
        email:
          type: string
          format: email
        password: 
          type: string
          format: password
        role:
          type: string
      required:
        - uuid
        - name
        - email
        - password
        - role   

    EditPasswordPayload:
      type: object
      properties:
        uuid:
          type: string
        newPassword:
          type: string


    UserDetailsPayload:
      type: object
      properties:
        uuid:
          type: string
          example: "00a6fa25-df29-4701-9077-557932591766"
        name:
          type: string
          example: "name"
        email:
          type: string
          format: email
        password: 
          type: string
        role:
          type: string
        status:
          type: string
          enum:
            - Active
            - Deactivated

    EditUserPayload:
      type: object
      properties:
        uuid:
          type: string
        name:
          type: string
          example: "name"
        role:
          type: string
    
    DeleteUserPayload:
      type: object
      properties:
        uuid:
          type: string
        status:
          type: string
          default: Deactivated

    RestoreUserPayload:
      type: object
      properties:
        uuid:
          type: string
        status:
          type: string
          default: Active
